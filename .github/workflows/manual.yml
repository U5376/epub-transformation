name: 自动编译和压缩  # 工作流程的名称

on: 
  workflow_dispatch:  # 只能手动触发工作流程
  # [push, pull_request] push时触发  

jobs:
  automate:
    runs-on: ubuntu-latest  # 运行环境为最新版本的Ubuntu

    steps:
      - name: 拉取代码  # 获取仓库代码
        uses: actions/checkout@v2

      - name: 设置Python环境  # 配置python环境
        uses: actions/setup-python@v2
        with:
           python-version: 3.8  # 使用3.8版本的python

      - name: 安装Nuitka  # 安装Nuitka
        run: pip install nuitka

      - name: 安装UPX  # 安装UPX
        run: sudo apt-get install -y upx

      - name: 编译并压缩  # 使用Nuitka进行编译并用UPX进行压缩
        run: |  
          cd nuitka编译upx压缩  # 切换工作目录到你放置.py文件和.ico文件的位置
          nuitka --follow-imports --windows-icon-from-ico=note.ico epub傍点变换.py  # 使用Nuitka进行编译
          upx --best epub傍点变换.exe  # 使用UPX进行压缩

      - name: 上传构建产物
        uses: actions/upload-artifact@v2
        with:
          name: compiled-exe # 此名称会用于artifact的zip文件名
          path: nuitka编译upx压缩/epub傍点变换.exe # 路径到EXE文件
  
      - name: 自动标签并推送
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          default_bump: patch
          
      - name: 创建发布
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: 发布版 ${{ steps.tag_version.outputs.new_tag }}
          asset_path: ./nuitka编译upx压缩/epub傍点变换.exe
          asset_name: epub傍点变换.exe
          asset_content_type: application/octet-stream
